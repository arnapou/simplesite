{% extends "@templates/base.twig" %}

{% block content %}

    <h1>Php</h1>

    <p>On peut personnaliser le comportement du site à l'aide de PHP.<br>
        Pour cela on met des fichiers php dans le dossier de config <code>path_php</code> et on respecte quelques principes de programmation PHP.</p>

    <p>Les fichiers php intégrés avec un comportement doivent retourner un objet, cet objet peut être de deux types.</p>



    <h3>L'objet retourné implémente l'interface <code>Arnapou\SimpleSite\<mark>PhpCode</mark></code></h3>

    <pre>
interface Arnapou\SimpleSite\PhpCode
{
    public function init(): void;
}</pre>
    <p>Comme dans l'exemple <code>php/twig_globals.php</code> qui injecte en variable global twig des données d'une table yaml :</p>
    <pre>{{ source('@php/twig_globals.php') | escape }}</pre>





    <h3>L'objet retourné étend la classe <code>Arnapou\SimpleSite\<mark>Controller</mark></code></h3>

    <p>Obligation d'implémenter la méthode abstraite configure (pour les routes) :</p>
    <pre>
abstract class Arnapou\SimpleSite\Controller
{
    abstract public function configure(): void;
}</pre>
    <p>Comme dans l'exemple <code>php/controller.php</code> qui déclare une route <code>hello</code> pour afficher une page bidon :</p>
    <pre>{{ source('@php/controller.php') | escape }}</pre>

    <p>
        Exemple de page :
        <a href="{{ path('hello', { name: 'world'}) }}" target="_blank"><button>
            {{ path('hello', { name: 'world'}) }}
        </button></a>
        lien produit avec <code>{% verbatim %}{{ path('hello', { name: 'world'}) }}{% endverbatim %}</code>
    </p>




    <h3>Custom listener sur les routes</h3>

    <p>On peut ajouter des listeners custom pour changer le comportement du site : changer la réponse par exemple et/ou court-circuiter le routing.</p>

    <p>Exemple <code>php/event_hook.php</code> qui court-circuite le routing pour envoyer une autre page :
    <pre>{{ source('@php/event_hook.php') | escape }}</pre>
    <p>Tester la page :
        <a href="{{ path('hello', { name: 'world'}) }}?killme=1" target="_blank"><button>
            {{ path('hello', { name: 'world'}) }}?killme=1
        </button></a>
    </p>


{% endblock %}
